#+TITLE: Novel deep learning methods for track reconstruction
#+SUBTITLE: B-Lunch Talk
#+AUTHOR: Michael Eliachevitch
#+DATE: 6th November 2018
#+OPTIONS: H:2 toc:nil num:nil
#+LATEX_CLASS: etp-beamer-fancy
#+BEAMER_HEADER: \institute{ETP -- KIT}
#+STARTUP: beamer
# #+COLUMNS: %45ITEM %10BEAMER_env(Env) %10BEAMER_act(Act) %4BEAMER_col(Col) %8BEAMER_opt(Opt)
* Slides
** Introduction
** Future challanges of track reconstruction
** Using image recognition
** Switch color                                            :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+BEAMER: \switchcolor{kit-blue100}

** Back to space points
** Recurrent neural networks and LSTM's
** Kalman Filter
- Kalman filter principle:
#+ATTR_LATEX: :width 0.5\linewidth
[[./figures/Basic_concept_of_Kalman_filtering.pdf]]
** RNN-based hit prediction
- based on previous hits in sequence, predict next one (regression)
- architecture: long short-term memory (/LSTM/) layer and fully conctected (FC) layer
- trained with mean-squared-error loss function
*** Simple hit predictor model
#+ATTR_LATEX: :width .75\linewidth
[[./figures/rnnFilterModel.png]]
3D space point sequence \rightarrow 2D next step prediction
** Results of simple hit predictor
- prediciton of next hit for example track
#+ATTR_LATEX: :width 0.65\linewidth
[[./figures/rnnFilterTrajectory.png]]
- residual distributions
#+ATTR_LATEX: :width 0.55\linewidth
[[./figures/rnnFilterResiduals.png]]

** Gaussian model
- outputs are gaussians PDF's with mean $\hat{\vec{r}}$ and covariance $\Sigma$
- trained with max. log-likelihood loss function
  $L(r, \hat{r}, \Sigma) = \log|\Sigma| + (r-\hat{r})^T \Sigma^{-1} (r-\hat{r})$
- learns to /predict own uncertainty/
  - important for scoring hits candidates in candidates
  - intrinsic to Kalman filter
*** Gaussian hit predictor model
#+ATTR_LATEX: :width .75\linewidth
[[./figures/rnnGausFilterModel.png]]
** Gaussian model results
- predictions of gaussian model for example track
#+ATTR_LATEX: :width 0.65\linewidth
[[./figures/rnnGausFilterTrajectory.png]]
- pull-distribution: good prediction, but non-gaussian features
#+ATTR_LATEX: :width 0.55\linewidth
[[./figures/rnnGausFilterPulls.png]]
** Track building proof-of-concept
- simple topology: no B-field, low-occupancy, no Bkg.,  particle-gun
- seed of three true hits
- /predict next/ hit with RNN, /select closest/ measured hit to track
#+ATTR_LATEX: :width 0.55\linewidth
[[./figures/rnnFilterTreeSearch.png]]
- /combinatorial tree search algorithm/ needed for proper tracking
(like CKF with RNN instead of Kalman)

** Switch color                                            :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+BEAMER: \switchcolor{kit-orange100}

** Graph Neural Networks (GNN's)
- part of /Geometric Deep Learning/ cite:Bronstein:2016thv
- represent hits (space points) as nodes in graph
- connections (edges) can be restricted with geometric constraints/preprocessing
- two applications developed
  1. hit classification: Which nodes belong to some track?
  2. segment classification: Which edges correspond to same-track hits?
#+ATTR_LATEX: :width 0.4\linewidth
[[./figures/hitGraphDiagram.png]]

** Used GNN architecture
*** EdgeNetwork
For each edge, computes the weight based on the features of the two nodes which it connects.

*** NodeNetwork
For each node, compute the update the features values based on the features of the connected nodes,
according to the edge weights, and the previous node features.

*** end block                                             :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
- two-layer multi-layers perceptrons (MLP's)
- applied in alternation
- /information propagates/ through graph
- /edges strengthened/weakened/ according to importance
#+ATTR_LATEX: :width 0.75\linewidth
[[./figures/gnnModel.png]]


** References and Further reading
nocite:Farrell2:2018cjr
nocite:Farrell:2017ifc
bibliographystyle:unsrt
bibliography:index.bib

* Backup
#+BEAMER: \switchcolor{kit-red100}
#+BEAMER:\backupbegin
** Backupslide

** Backupend :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+BEAMER:\backupend
* File local variable :noexport:ARCHIVE:

# Local Variables:
# org-latex-pdf-process: ("latexmk -interaction=nonstopmode -bibtex -output-directory=%o %f")
# eval: (plist-put org-format-latex-options :scale 1.4)
# End:
